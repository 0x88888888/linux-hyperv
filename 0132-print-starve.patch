From a0daf88a70c261572810fd734b0b1d18a85205e1 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Fri, 29 Jul 2016 19:20:26 +0000
Subject: [PATCH 132/135] print starve

Clearly print when we're starved for entropy
---
 drivers/char/random.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/char/random.c b/drivers/char/random.c
index e35b99b..439fa8a 100644
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@ -1447,9 +1447,11 @@ _random_read(int nonblock, char __user *buf, size_t nbytes)
 		if (nonblock)
 			return -EAGAIN;
 
+		printk("Blocking on entropy: %s\n", current->comm);
 		wait_event_interruptible(random_read_wait,
 			ENTROPY_BITS(&input_pool) >=
 			random_read_wakeup_bits);
+		printk("Done Blocking on entropy: %s\n", current->comm);
 		if (signal_pending(current))
 			return -ERESTARTSYS;
 	}
@@ -1618,8 +1620,10 @@ SYSCALL_DEFINE3(getrandom, char __user *, buf, size_t, count,
 	if (unlikely(nonblocking_pool.initialized == 0)) {
 		if (flags & GRND_NONBLOCK)
 			return -EAGAIN;
+		printk("Blocking on entropy: %s\n", current->comm);
 		wait_event_interruptible(urandom_init_wait,
 					 nonblocking_pool.initialized);
+		printk("Done Blocking on entropy: %s\n", current->comm);
 		if (signal_pending(current))
 			return -ERESTARTSYS;
 	}
-- 
2.9.2

